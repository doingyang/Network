    HttpManager.init(this, UrlConfig.BASE_URL);
    HttpManager.setOnGetHeadersListener(new HttpManager.OnGetHeadersListener() {
        @Override
        public Map<String, String> getHeaders() {
            Map<String, String> headers = new HashMap<>();
            headers.put("access_token", "1234");
            return headers;
        }
    });

    public static void testGet(HttpCallback callback) {
        HashMap<String, String> headers = new HashMap<>();
        headers.put("aaa", "adafd");
        HttpManager.addTmpHeaders(headers);
        HttpManager.get(UrlConfig.USER_INFO, null, callback);
    }

    public static void testPost(String name, String password, HttpCallback callback) {
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("name", name);
        parameters.put("password", password);
        HttpManager.postFullPath(UrlConfig.USER_LOGIN, parameters, callback);
    }

    public static void testPost(UserForLogin userForLogin, HttpCallback callback) {
        HttpManager.postByBody(UrlConfig.USER_LOGIN_BY_BODY, userForLogin, callback);
    }

    public static void testPut(String putContent, HttpCallback callback) {
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("name", putContent);
//        parameters.put("age", 18);
        HttpManager.put(UrlConfig.USER_UPDATE, parameters, callback);
    }

    public static void testDelete(int feedId, HttpCallback callback) {
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("feed_id", feedId);
        HttpManager.deleteByBody(UrlConfig.FEED_DELETE, parameters, callback);
    }

    public static void testSingleFileUpload(String url, String filePath, String fileDes, FileResponseResult fileResponseResult) {
        HttpManager.uploadFile(url, filePath, fileDes, fileResponseResult);
    }

    public static void testMultipleFileUpload(String url, List<String> filePathList, FileResponseResult fileResponseResult) {
        HttpManager.uploadFiles(url, filePathList, fileResponseResult);
    }